body {
    font-family: titleFont;
    font-size: 30px;
    background-color: #f2f2f2;
}

select {
    font-family: titleFont;
    font-size: 20px;
}

tr {
    font-weight: bold;
}

option {
    font-size: 12px;
}

input[type="number"] {
    font-family: titleFont;
    font-size: 20px;
    font-weight: bold;
    padding: 5px 0px 5px 0px;
}

@font-face {
    font-family: titleFont;
    src: url(SIMPLIFICA.ttf);
}

#memoryTable {
    background-color: #003399;
}

h1 {
    font-family: titleFont;
    font-size: 50px;
    margin: 0;
    padding-top: 15px;
    color: navy;
    text-shadow: 1px 1px grey;
}

.mainGrid {
    display: grid;
    height: 700px;
    width: 800px;
    grid-template-columns: 60% 40%;
    grid-template-rows: 10% 30% 30% 30%;
    grid-template-areas: "header header" "algorithmSelection memoryImage" "processManager memoryImage" "memoryCompaction memoryImage"
}

.header {
    grid-area: header;
    text-align: center;
}

.algorithmSelection {
    padding: 50px 20px 20px 20px;
    grid-area: algorithmSelection;
}

.memoryImage {
    grid-area: memoryImage;
}

.processManager {
    padding: 20px;
    grid-area: processManager;
}

.memoryCompaction {
    grid-area: memoryCompaction;
}

#processesID,
#processIDTitle,
#processSize,
#processSizeInput {
    display: inline;
    margin-bottom: 20px;
}

#selectAlgTitle,
#algorithmDropDown,
#totalMem {
    display: inline;
}

#totalMemory {
    margin-top: 20px;
}


/*..............Button Styling..............*/

.rightArrowBtn,
.leftArrowBtn {
    border-radius: 4px;
    background: linear-gradient(darkgrey, white, darkgrey) !important;
    border: none;
    color: darkblue;
    text-align: center;
    text-transform: uppercase;
    font-size: 24px;
    padding: 10px;
    width: 1000px;
    transition: all 0.4s;
    cursor: pointer;
}

.rightArrowBtn {
    padding: 10px 40px 10px 40px;
}

.compactMemory {
    border-radius: 4px;
    background: linear-gradient(darkgrey, white, darkgrey) !important;
    border: none;
    color: darkblue;
    text-align: center;
    text-transform: uppercase;
    font-size: 28px;
    padding: 20px;
    width: 150px;
    transition: all 0.4s;
    cursor: pointer;
    margin: 5px;
}

.compactMemory span,
.rightArrowBtn span,
.leftArrowBtn span {
    cursor: pointer;
    display: inline-block;
    position: relative;
    transition: 0.4s;
}

.leftArrowBtn span:after {
    content: '\00AB';
    position: absolute;
    opacity: 0;
    top: 0;
    right: -2px;
    transition: 0.5s;
}

.compactMemory span:after,
.rightArrowBtn span:after {
    content: '\00BB';
    position: absolute;
    opacity: 0;
    top: 0;
    right: -20px;
    transition: 0.5s;
}

.compactMemory:hover span,
.rightArrowBtn:hover span,
.leftArrowBtn:hover span {
    padding-right: 25px;
}

.compactMemory:hover span:after,
.rightArrowBtn:hover span:after,
.leftArrowBtn:hover span:after {
    opacity: 1;
    right: 0;
}


/**/

.boxshadow {
    position: relative;
    box-shadow: 5px 2px 4px rgba(0, 0, 0, .5);
    background: white;
}


/* Make the image fit the box */

.boxshadow::after {
    position: absolute;
    z-index: -1;
    /* hide shadow behind image */
    box-shadow: 0 20px 20px rgba(0, 0, 0, 0.3);
    width: 70%;
    left: 15%;
    /* one half of the remaining 30% */
    height: 100px;
    bottom: 0;
}